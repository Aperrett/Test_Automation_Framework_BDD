#! /usr/bin/env bash
set -e

cd "$(dirname $0)"/..

# variables
first_argv=${BASH_ARGV[1]}
last_argv=${*: -1}
cmdline_input=$@
taf_img="localhost/taf"

# clean up script.
cleanup() {
    echo "Cleaning old test results..."
    rm -rf screenshots
    rm -rf reports
}

# Check if Docker or Podman is installed.
check_docker_podman() {
    if [[ $(which docker) && $(docker --version) && $(docker ps) ]]; then
        echo "Docker is running..."
        cmd="docker"
    elif [[ $(which podman) && $(podman --version) && $(podman ps) ]]; then
        echo "Podman is running..."
        cmd="podman"
    else
        echo "Error: Docker or Podman is not installed or running..."
        exit
    fi
}


# run taf container
run_taf_container() {
    echo "Running tests in TAF Container..."
    taf_container="taf-$(xxd -l4 -p /dev/urandom)"

    # strip --podman from the cmdline input.
    cmd_line_options=${cmdline_input//"--podman"/}
    status=0

    if ! $cmd run                                \
        --init                                   \
        --name="$taf_container"                  \
        -v "$(pwd)"/.behaverc:/taf/.behaverc:ro  \
        -v "$(pwd)"/features:/taf/features:ro    \
        -v "$(pwd)"/lib:/taf/lib:ro              \
        -v /dev/shm:/dev/shm                     \
        --shm-size=2G                            \
        "$taf_img" -f json.pretty -f pretty -o reports/taf_report.json --junit --no-skipped --tags=~@skip $cmd_line_options
    then
        status=1
        rm -rf screenshots/* && $cmd cp "$taf_container:/taf/screenshots" .
    fi

    rm -rf reports/* && $cmd cp "$taf_container:/taf/reports" .

    $cmd rm -f "$taf_container"
}


if [[ $@ != *"--local"* && $@ != *"--podman"* ]]; then
  echo "Error: Please choose option --local or --podman"
  echo "Error: Not Starting TAF."
  exit
fi


if [[ $last_argv == "--local" ]]; then
    cleanup
    echo "Starting TAF Tests with features: $first_argv in $last_argv mode..."
    . .venv/bin/activate
    # strip --local from the cmdline input.
    cmd_line_options=${cmdline_input//"--local"/}
    PYTHONPATH=$(pwd)/lib behave -f json.pretty -f pretty -o reports/taf_report.json --junit --no-skipped --tags=~@skip $cmd_line_options
elif [[ $last_argv == "--podman" ]]; then
    cleanup
    check_docker_podman
    echo "Starting TAF Tests in a headless Container with features: $first_argv in $last_argv mode..."
    run_taf_container
    exit $status
fi
